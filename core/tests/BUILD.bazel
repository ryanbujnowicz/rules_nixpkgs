load(":location_expansion_unit_test.bzl", "expand_location_unit_test_suite")

package(default_testonly = 1)

expand_location_unit_test_suite()

[
    # All of these tests use the "hello" binary to see
    # whether different invocations of `nixpkgs_package`
    # produce a valid bazel repository.
    sh_test(
        name = "run-{0}".format(test),
        timeout = "short",
        srcs = ["test_bin.sh"],
        args = ["$(location @{0}//:bin)".format(test)],
        data = ["@{0}//:bin".format(test)],
    )
    for test in [
        "hello",
        "expr-test",
        "attribute-test",
        "expr-attribute-test",
        "nix-file-test",
        "nix-file-deps-test",
        "nixpkgs-git-repository-test",
        "nixpkgs-local-repository-test",
        "relative-imports",
    ]
] + [
    # These tests use the nix package generated by ./output.nix

    # Checks whether the `:include` filegroup of `nixpkgs_package`
    # repositories works as intended
    # (that the expected number of files are inside the target)
    sh_test(
        name = "run-test-include",
        timeout = "short",
        srcs = ["test_output.sh"],
        args = [
            "2",
            "$(locations @output-filegroup-test//:include)",
        ],
        data = ["@output-filegroup-test//:include"],
    ),

    # Checks whether specifying a manual filegroup in the
    # `nixpkgs_package` BUILD file works as well.
    sh_test(
        name = "run-test-manual-filegroup",
        timeout = "short",
        srcs = ["test_output.sh"],
        args = [
            "3",
            "$(locations @output-filegroup-manual-test//:manual-filegroup)",
        ],
        data = ["@output-filegroup-manual-test//:manual-filegroup"],
    ),
]

# Test nixopts location expansion
sh_test(
    name = "location-expansion-test",
    srcs = ["location_expansion.sh"],
    args = [
        "$(POSIX_DIFF)",
        "$(rootpath //tests:location_expansion/test_file)",
        "$(rootpath @nixpkgs_location_expansion_test//:out/local_file)",
        "$(rootpath @nixpkgs_location_expansion_test//:out/external_file)",
    ],
    data = [
        "//tests:location_expansion/test_file",
        "@nixpkgs_location_expansion_test//:out/external_file",
        "@nixpkgs_location_expansion_test//:out/local_file",
    ],
    toolchains = ["@rules_sh//sh/posix:make_variables"],
)
