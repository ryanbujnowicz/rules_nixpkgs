name: Continuous integration
on: [push]
jobs:
  test-nixpkgs:
    name: Build & Test - Nixpkgs
    strategy:
      fail-fast: false
      matrix:
        os: 
          - ubuntu-latest
          - macos-11
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: cachix/install-nix-action@v16
        with:
          nix_path: nixpkgs=./nixpkgs.nix
      - name: Configure
        env:
          BUILDBUDDY_API_KEY: ${{ secrets.BUILDBUDDY_API_KEY }}
        run: |
          cat >.bazelrc.local <<EOF
          common --config=ci
          build --remote_header=x-buildbuddy-api-key="$BUILDBUDDY_API_KEY"
          EOF
      - name: Build & test
        run: |
          nix-shell --pure --run '
            set -euo pipefail
            bazel test //...
          '
  test-examples:
    name: Build & Test - Examples
    strategy:
      fail-fast: false
      matrix:
        os: 
          - ubuntu-latest
          - macos-11
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: cachix/install-nix-action@v16
        with:
          nix_path: nixpkgs=./nixpkgs.nix
      - name: Configure
        env:
          BUILDBUDDY_API_KEY: ${{ secrets.BUILDBUDDY_API_KEY }}
        run: |
          cat >.bazelrc.local <<EOF
          common --config=ci
          build --remote_header=x-buildbuddy-api-key="$BUILDBUDDY_API_KEY"
          EOF
      - name: Build & test
        run: |
          skip() {
            echo "Will skip $(head -n1 $2/README.md) ${1%_nix} Nix"
            local p="$1[@]"
            read -a ${1} <<< $(echo ${!p//$2})
          }

          cd examples/toolchains
          with_nix=( $(ls) )
          without_nix=( cc go java rust )

          if [ "${{ runner.os }}" == "macOS" ]; then
            # Rust - https://github.com/tweag/rules_nixpkgs/issues/187
            skip with_nix rust
            skip without_nix rust
          fi

          for dir in "${with_nix[@]}"; do
              cd "$dir"
              echo
              echo Running $(head -n1 README.md) with Nix
              nix-shell --command 'bazel run --config=nix :hello'
              # TODO: all toolchains should run without Nixpkgs
              cd ..
          done
          for dir in "${without_nix[@]}"; do
              cd "$dir"
              echo
              echo Running $(head -n1 README.md) without Nix
              bazel run :hello
              cd ..
          done
